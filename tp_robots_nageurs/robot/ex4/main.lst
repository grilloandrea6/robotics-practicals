   1              		.cpu arm7tdmi
   2              		.arch armv4t
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.startup,"ax",%progbits
  18              		.align	2
  19              		.global	main
  20              		.syntax unified
  21              		.arm
  23              	main:
  24              	.LFB0:
  25              		.file 1 "main.c"
   1:main.c        **** #include "hardware.h"
   2:main.c        **** #include "registers.h"
   3:main.c        **** #include "modes.h"
   4:main.c        **** 
   5:main.c        **** int main(void)
   6:main.c        **** {
  26              		.loc 1 6 1 view -0
  27              		.cfi_startproc
  28              		@ Function supports interworking.
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
   7:main.c        ****   hardware_init();
  31              		.loc 1 7 3 view .LVU1
   6:main.c        ****   hardware_init();
  32              		.loc 1 6 1 is_stmt 0 view .LVU2
  33 0000 10402DE9 		push	{r4, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 4, -8
  37              		.cfi_offset 14, -4
  38              		.loc 1 7 3 view .LVU3
  39 0004 FEFFFFEB 		bl	hardware_init
  40              	.LVL0:
   8:main.c        ****   registers_init();
  41              		.loc 1 8 3 is_stmt 1 view .LVU4
  42 0008 FEFFFFEB 		bl	registers_init
  43              	.LVL1:
   9:main.c        **** 
  10:main.c        ****   // Changes the color of the led (green) to show the boot
  11:main.c        ****   set_color_i(2, 0);
  44              		.loc 1 11 3 view .LVU5
  45 000c 0200A0E3 		mov	r0, #2
  46 0010 0010A0E3 		mov	r1, #0
  47 0014 FEFFFFEB 		bl	set_color_i
  48              	.LVL2:
  12:main.c        **** 
  13:main.c        ****   // Calls the main mode loop (see modes.c)
  14:main.c        ****   main_mode_loop();
  49              		.loc 1 14 3 view .LVU6
  50 0018 FEFFFFEB 		bl	main_mode_loop
  51              	.LVL3:
  15:main.c        **** 
  16:main.c        ****   return 0;
  52              		.loc 1 16 3 view .LVU7
  17:main.c        **** }
  53              		.loc 1 17 1 is_stmt 0 view .LVU8
  54 001c 0000A0E3 		mov	r0, #0
  55 0020 1040BDE8 		pop	{r4, lr}
  56              	.LCFI1:
  57              		.cfi_restore 14
  58              		.cfi_restore 4
  59              		.cfi_def_cfa_offset 0
  60 0024 1EFF2FE1 		bx	lr
  61              		.cfi_endproc
  62              	.LFE0:
  64              		.text
  65              	.Letext0:
  66              		.file 2 "../firmware/hardware.h"
  67              		.file 3 "../firmware/registers.h"
  68              		.file 4 "modes.h"
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\agrillo\AppData\Local\Temp\cckadTJI.s:18     .text.startup:00000000 $a
C:\Users\agrillo\AppData\Local\Temp\cckadTJI.s:23     .text.startup:00000000 main

UNDEFINED SYMBOLS
hardware_init
registers_init
set_color_i
main_mode_loop
