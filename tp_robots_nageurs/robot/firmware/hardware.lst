   1              		.cpu arm7tdmi
   2              		.arch armv4t
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"hardware.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.align	2
  18              		.global	set_rgb
  19              		.syntax unified
  20              		.arm
  22              	set_rgb:
  23              	.LVL0:
  24              	.LFB1:
  25              		.file 1 "../firmware/hardware.c"
   1:../firmware/hardware.c **** #include "LPC21xx.h"
   2:../firmware/hardware.c **** #include "hardware.h"
   3:../firmware/hardware.c **** #include "registers.h"
   4:../firmware/hardware.c **** #include "timerISR.h"
   5:../firmware/hardware.c **** #include "can.h"
   6:../firmware/hardware.c **** #include "irsens.h"
   7:../firmware/hardware.c **** #include "adc.h"
   8:../firmware/hardware.c **** #include "armVIC.h"
   9:../firmware/hardware.c **** 
  10:../firmware/hardware.c **** #if defined(HARDWARE_V3)
  11:../firmware/hardware.c **** 
  12:../firmware/hardware.c **** static const uint8_t colors_r[] = { 0, 0, 0, 0, 2, 2, 2, 2, 2, 1, 0, 0, 2, 1 };
  13:../firmware/hardware.c **** static const uint8_t colors_g[] = { 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 0 };
  14:../firmware/hardware.c **** static const uint8_t colors_b[] = { 0, 2, 0, 2, 0, 2, 0, 2, 0, 0, 2, 1, 1, 2 };
  15:../firmware/hardware.c **** 
  16:../firmware/hardware.c **** static uint8_t led_int = 0;
  17:../firmware/hardware.c **** 
  18:../firmware/hardware.c **** void init_rgb_led()
  19:../firmware/hardware.c **** {
  20:../firmware/hardware.c ****   i2c_set(RGB_ADDR, 0, 0x00);
  21:../firmware/hardware.c ****   i2c_set(RGB_ADDR, 1, 0x05);
  22:../firmware/hardware.c ****   i2c_set(RGB_ADDR, 6, 0xFF);
  23:../firmware/hardware.c ****   i2c_set(RGB_ADDR, 8, 0x3F);
  24:../firmware/hardware.c ****   set_rgb(0, 0, 0);
  25:../firmware/hardware.c **** }
  26:../firmware/hardware.c **** 
  27:../firmware/hardware.c **** void set_rgb(uint8_t r, uint8_t g, uint8_t b)
  28:../firmware/hardware.c **** {
  26              		.loc 1 28 1 view -0
  27              		.cfi_startproc
  28              		@ Function supports interworking.
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  29:../firmware/hardware.c ****   i2c_set(RGB_ADDR, 2, r);
  31              		.loc 1 29 3 view .LVU1
  28:../firmware/hardware.c ****   i2c_set(RGB_ADDR, 2, r);
  32              		.loc 1 28 1 is_stmt 0 view .LVU2
  33 0000 70402DE9 		push	{r4, r5, r6, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 16
  36              		.cfi_offset 4, -16
  37              		.cfi_offset 5, -12
  38              		.cfi_offset 6, -8
  39              		.cfi_offset 14, -4
  28:../firmware/hardware.c ****   i2c_set(RGB_ADDR, 2, r);
  40              		.loc 1 28 1 view .LVU3
  41 0004 0150A0E1 		mov	r5, r1
  42 0008 0240A0E1 		mov	r4, r2
  43              		.loc 1 29 3 view .LVU4
  44 000c 0210A0E3 		mov	r1, #2
  45              	.LVL1:
  46              		.loc 1 29 3 view .LVU5
  47 0010 0020A0E1 		mov	r2, r0
  48              	.LVL2:
  49              		.loc 1 29 3 view .LVU6
  50 0014 6200A0E3 		mov	r0, #98
  51              	.LVL3:
  52              		.loc 1 29 3 view .LVU7
  53 0018 FEFFFFEB 		bl	i2c_set
  54              	.LVL4:
  30:../firmware/hardware.c ****   i2c_set(RGB_ADDR, 3, g);
  55              		.loc 1 30 3 is_stmt 1 view .LVU8
  56 001c 0520A0E1 		mov	r2, r5
  57 0020 0310A0E3 		mov	r1, #3
  58 0024 6200A0E3 		mov	r0, #98
  59 0028 FEFFFFEB 		bl	i2c_set
  60              	.LVL5:
  31:../firmware/hardware.c ****   i2c_set(RGB_ADDR, 4, b);
  61              		.loc 1 31 3 view .LVU9
  62 002c 0420A0E1 		mov	r2, r4
  63 0030 0410A0E3 		mov	r1, #4
  64 0034 6200A0E3 		mov	r0, #98
  65 0038 FEFFFFEB 		bl	i2c_set
  66              	.LVL6:
  32:../firmware/hardware.c **** }
  67              		.loc 1 32 1 is_stmt 0 view .LVU10
  68 003c 7040BDE8 		pop	{r4, r5, r6, lr}
  69              	.LCFI1:
  70              		.cfi_restore 14
  71              		.cfi_restore 6
  72              		.cfi_restore 5
  73              		.cfi_restore 4
  74              		.cfi_def_cfa_offset 0
  75 0040 1EFF2FE1 		bx	lr
  76              		.cfi_endproc
  77              	.LFE1:
  79              		.align	2
  80              		.global	init_rgb_led
  81              		.syntax unified
  82              		.arm
  84              	init_rgb_led:
  85              	.LFB0:
  19:../firmware/hardware.c ****   i2c_set(RGB_ADDR, 0, 0x00);
  86              		.loc 1 19 1 is_stmt 1 view -0
  87              		.cfi_startproc
  88              		@ Function supports interworking.
  89              		@ args = 0, pretend = 0, frame = 0
  90              		@ frame_needed = 0, uses_anonymous_args = 0
  20:../firmware/hardware.c ****   i2c_set(RGB_ADDR, 1, 0x05);
  91              		.loc 1 20 3 view .LVU12
  92 0044 0020A0E3 		mov	r2, #0
  19:../firmware/hardware.c ****   i2c_set(RGB_ADDR, 0, 0x00);
  93              		.loc 1 19 1 is_stmt 0 view .LVU13
  94 0048 10402DE9 		push	{r4, lr}
  95              	.LCFI2:
  96              		.cfi_def_cfa_offset 8
  97              		.cfi_offset 4, -8
  98              		.cfi_offset 14, -4
  20:../firmware/hardware.c ****   i2c_set(RGB_ADDR, 1, 0x05);
  99              		.loc 1 20 3 view .LVU14
 100 004c 0210A0E1 		mov	r1, r2
 101 0050 6200A0E3 		mov	r0, #98
 102 0054 FEFFFFEB 		bl	i2c_set
 103              	.LVL7:
  21:../firmware/hardware.c ****   i2c_set(RGB_ADDR, 6, 0xFF);
 104              		.loc 1 21 3 is_stmt 1 view .LVU15
 105 0058 0520A0E3 		mov	r2, #5
 106 005c 0110A0E3 		mov	r1, #1
 107 0060 6200A0E3 		mov	r0, #98
 108 0064 FEFFFFEB 		bl	i2c_set
 109              	.LVL8:
  22:../firmware/hardware.c ****   i2c_set(RGB_ADDR, 8, 0x3F);
 110              		.loc 1 22 3 view .LVU16
 111 0068 FF20A0E3 		mov	r2, #255
 112 006c 0610A0E3 		mov	r1, #6
 113 0070 6200A0E3 		mov	r0, #98
 114 0074 FEFFFFEB 		bl	i2c_set
 115              	.LVL9:
  23:../firmware/hardware.c ****   set_rgb(0, 0, 0);
 116              		.loc 1 23 3 view .LVU17
 117 0078 3F20A0E3 		mov	r2, #63
 118 007c 0810A0E3 		mov	r1, #8
 119 0080 6200A0E3 		mov	r0, #98
 120 0084 FEFFFFEB 		bl	i2c_set
 121              	.LVL10:
  24:../firmware/hardware.c **** }
 122              		.loc 1 24 3 view .LVU18
 123 0088 0020A0E3 		mov	r2, #0
  25:../firmware/hardware.c **** 
 124              		.loc 1 25 1 is_stmt 0 view .LVU19
 125 008c 1040BDE8 		pop	{r4, lr}
 126              	.LCFI3:
 127              		.cfi_restore 14
 128              		.cfi_restore 4
 129              		.cfi_def_cfa_offset 0
  24:../firmware/hardware.c **** }
 130              		.loc 1 24 3 view .LVU20
 131 0090 0210A0E1 		mov	r1, r2
 132 0094 0200A0E1 		mov	r0, r2
 133 0098 FEFFFFEA 		b	set_rgb
 134              	.LVL11:
 135              		.cfi_endproc
 136              	.LFE0:
 138              		.align	2
 139              		.syntax unified
 140              		.arm
 142              	led_timer_isr:
 143              	.LFB9:
  33:../firmware/hardware.c **** 
  34:../firmware/hardware.c **** void set_color(uint8_t c)
  35:../firmware/hardware.c **** {
  36:../firmware/hardware.c ****   reg32_table[REG32_LED] = LED_MANUAL;
  37:../firmware/hardware.c ****   set_rgb(colors_r[c] << led_int, colors_g[c] << led_int, colors_b[c] << led_int);
  38:../firmware/hardware.c **** }
  39:../firmware/hardware.c **** 
  40:../firmware/hardware.c **** void set_color_i(uint8_t c, uint8_t i)
  41:../firmware/hardware.c **** {
  42:../firmware/hardware.c ****   led_int = i;
  43:../firmware/hardware.c ****   set_color(c);
  44:../firmware/hardware.c **** }
  45:../firmware/hardware.c **** 
  46:../firmware/hardware.c **** uint16_t get_batt_voltage()
  47:../firmware/hardware.c **** {
  48:../firmware/hardware.c ****   return (((uint16_t) i2c_get(BATT_ADDR, 0x0c) << 8) | i2c_get(BATT_ADDR, 0x0d)) >> 5;
  49:../firmware/hardware.c **** }
  50:../firmware/hardware.c **** 
  51:../firmware/hardware.c **** int16_t get_batt_current()
  52:../firmware/hardware.c **** {
  53:../firmware/hardware.c ****   int16_t tmp;
  54:../firmware/hardware.c **** 
  55:../firmware/hardware.c ****   tmp = ((int16_t) i2c_get(BATT_ADDR, 0x0e) << 8) | i2c_get(BATT_ADDR, 0x0f);
  56:../firmware/hardware.c ****   tmp = tmp >> 3;
  57:../firmware/hardware.c ****   return tmp;
  58:../firmware/hardware.c **** }
  59:../firmware/hardware.c **** 
  60:../firmware/hardware.c **** uint16_t get_ext_voltage()
  61:../firmware/hardware.c **** {
  62:../firmware/hardware.c ****   return adc_read_ch(0);
  63:../firmware/hardware.c **** }
  64:../firmware/hardware.c **** 
  65:../firmware/hardware.c **** int16_t get_batt_current_acc()
  66:../firmware/hardware.c **** {
  67:../firmware/hardware.c ****   return ((int16_t) i2c_get(BATT_ADDR, 0x10) << 8) | i2c_get(BATT_ADDR, 0x11);
  68:../firmware/hardware.c **** }
  69:../firmware/hardware.c **** 
  70:../firmware/hardware.c **** int16_t get_temperature()
  71:../firmware/hardware.c **** {
  72:../firmware/hardware.c ****   return (((int16_t) i2c_get(BATT_ADDR, 0x18) << 8) | i2c_get(BATT_ADDR, 0x19)) >> 5;
  73:../firmware/hardware.c **** }
  74:../firmware/hardware.c **** 
  75:../firmware/hardware.c **** #elif defined(HARDWARE_V2)
  76:../firmware/hardware.c **** 
  77:../firmware/hardware.c **** void set_led(uint8_t i)
  78:../firmware/hardware.c **** {
  79:../firmware/hardware.c ****   if (i) {
  80:../firmware/hardware.c ****     IO0SET = BIT_EXTLED;
  81:../firmware/hardware.c ****   } else {
  82:../firmware/hardware.c ****     IO0CLR = BIT_EXTLED;
  83:../firmware/hardware.c ****   }
  84:../firmware/hardware.c **** }
  85:../firmware/hardware.c **** 
  86:../firmware/hardware.c **** #endif // HARDWARE_V2
  87:../firmware/hardware.c **** 
  88:../firmware/hardware.c **** static void led_timer_isr(void)
  89:../firmware/hardware.c **** {
 144              		.loc 1 89 1 is_stmt 1 view -0
 145              		.cfi_startproc
 146              		@ Function supports interworking.
 147              		@ args = 0, pretend = 0, frame = 0
 148              		@ frame_needed = 0, uses_anonymous_args = 0
 149              		@ link register save eliminated.
  90:../firmware/hardware.c ****   static volatile uint8_t ctr = 0;
 150              		.loc 1 90 3 view .LVU22
  91:../firmware/hardware.c ****   static volatile uint8_t st = 0;
 151              		.loc 1 91 3 view .LVU23
  92:../firmware/hardware.c ****   uint32_t regdw_led = reg32_table[REG32_LED];
 152              		.loc 1 92 3 view .LVU24
 153              		.loc 1 92 12 is_stmt 0 view .LVU25
 154 009c 7C309FE5 		ldr	r3, .L13
 155 00a0 003093E5 		ldr	r3, [r3]
 156              	.LVL12:
  93:../firmware/hardware.c **** 
  94:../firmware/hardware.c ****   uint8_t l = (regdw_led >> 24);
 157              		.loc 1 94 3 is_stmt 1 view .LVU26
  95:../firmware/hardware.c **** 
  96:../firmware/hardware.c ****   if (l==0) {           // 0 = ON
 158              		.loc 1 96 3 view .LVU27
 159              		.loc 1 96 6 is_stmt 0 view .LVU28
 160 00a4 232CB0E1 		lsrs	r2, r3, #24
 161 00a8 0500001A 		bne	.L6
 162              	.L12:
  97:../firmware/hardware.c **** #if defined(HARDWARE_V3)
  98:../firmware/hardware.c ****     set_rgb(regdw_led >> 16, regdw_led >> 8, regdw_led & 0xFF);
  99:../firmware/hardware.c **** #elif defined(HARDWARE_V2)
 100:../firmware/hardware.c ****     set_led((regdw_led & 0xffffff) != 0));
 101:../firmware/hardware.c **** #endif
 102:../firmware/hardware.c ****   } else if (l!=255) {  // 255 = override (ignore)
 103:../firmware/hardware.c ****     ctr++;
 104:../firmware/hardware.c ****     if (ctr==l) {
 105:../firmware/hardware.c ****       ctr = 0;
 106:../firmware/hardware.c ****       st = !st;
 107:../firmware/hardware.c ****       if (st) {
 108:../firmware/hardware.c **** #if defined(HARDWARE_V3)
 109:../firmware/hardware.c ****         set_rgb(regdw_led >> 16, regdw_led >> 8, regdw_led & 0xFF);
 163              		.loc 1 109 9 is_stmt 1 view .LVU29
 164              		.loc 1 109 44 is_stmt 0 view .LVU30
 165 00ac 2314A0E1 		lsr	r1, r3, #8
 166              		.loc 1 109 27 view .LVU31
 167 00b0 2308A0E1 		lsr	r0, r3, #16
 168              		.loc 1 109 9 view .LVU32
 169 00b4 FF2003E2 		and	r2, r3, #255
 170 00b8 FF1001E2 		and	r1, r1, #255
 171 00bc FF0000E2 		and	r0, r0, #255
 172 00c0 150000EA 		b	.L11
 173              	.L6:
 102:../firmware/hardware.c ****     ctr++;
 174              		.loc 1 102 13 view .LVU33
 175 00c4 FF0052E3 		cmp	r2, #255
  94:../firmware/hardware.c **** 
 176              		.loc 1 94 11 view .LVU34
 177 00c8 FF0002E2 		and	r0, r2, #255
 102:../firmware/hardware.c ****     ctr++;
 178              		.loc 1 102 10 is_stmt 1 view .LVU35
 102:../firmware/hardware.c ****     ctr++;
 179              		.loc 1 102 13 is_stmt 0 view .LVU36
 180 00cc 1EFF2F01 		bxeq	lr
 103:../firmware/hardware.c ****     if (ctr==l) {
 181              		.loc 1 103 5 is_stmt 1 view .LVU37
 103:../firmware/hardware.c ****     if (ctr==l) {
 182              		.loc 1 103 8 is_stmt 0 view .LVU38
 183 00d0 4C209FE5 		ldr	r2, .L13+4
 184 00d4 0010D2E5 		ldrb	r1, [r2]	@ zero_extendqisi2
 185 00d8 011081E2 		add	r1, r1, #1
 186 00dc FF1001E2 		and	r1, r1, #255
 187 00e0 0010C2E5 		strb	r1, [r2]
 104:../firmware/hardware.c ****       ctr = 0;
 188              		.loc 1 104 5 is_stmt 1 view .LVU39
 104:../firmware/hardware.c ****       ctr = 0;
 189              		.loc 1 104 12 is_stmt 0 view .LVU40
 190 00e4 0010D2E5 		ldrb	r1, [r2]	@ zero_extendqisi2
 104:../firmware/hardware.c ****       ctr = 0;
 191              		.loc 1 104 8 view .LVU41
 192 00e8 000051E1 		cmp	r1, r0
 193 00ec 1EFF2F11 		bxne	lr
 105:../firmware/hardware.c ****       st = !st;
 194              		.loc 1 105 7 is_stmt 1 view .LVU42
 105:../firmware/hardware.c ****       st = !st;
 195              		.loc 1 105 11 is_stmt 0 view .LVU43
 196 00f0 0010A0E3 		mov	r1, #0
 197 00f4 0010C2E5 		strb	r1, [r2]
 106:../firmware/hardware.c ****       if (st) {
 198              		.loc 1 106 7 is_stmt 1 view .LVU44
 106:../firmware/hardware.c ****       if (st) {
 199              		.loc 1 106 12 is_stmt 0 view .LVU45
 200 00f8 0110D2E5 		ldrb	r1, [r2, #1]	@ zero_extendqisi2
 201 00fc 011071E2 		rsbs	r1, r1, #1
 202 0100 0010A033 		movcc	r1, #0
 106:../firmware/hardware.c ****       if (st) {
 203              		.loc 1 106 10 view .LVU46
 204 0104 0110C2E5 		strb	r1, [r2, #1]
 107:../firmware/hardware.c **** #if defined(HARDWARE_V3)
 205              		.loc 1 107 7 is_stmt 1 view .LVU47
 107:../firmware/hardware.c **** #if defined(HARDWARE_V3)
 206              		.loc 1 107 11 is_stmt 0 view .LVU48
 207 0108 0120D2E5 		ldrb	r2, [r2, #1]	@ zero_extendqisi2
 107:../firmware/hardware.c **** #if defined(HARDWARE_V3)
 208              		.loc 1 107 10 view .LVU49
 209 010c FF2012E2 		ands	r2, r2, #255
 110:../firmware/hardware.c **** #elif defined(HARDWARE_V2)
 111:../firmware/hardware.c ****         set_led((regdw_led & 0xffffff) != 0));
 112:../firmware/hardware.c **** #endif
 113:../firmware/hardware.c ****       } else {
 114:../firmware/hardware.c **** #if defined(HARDWARE_V3)
 115:../firmware/hardware.c ****         set_rgb(0, 0, 0);
 210              		.loc 1 115 9 view .LVU50
 211 0110 0210A001 		moveq	r1, r2
 212 0114 0200A001 		moveq	r0, r2
 107:../firmware/hardware.c **** #if defined(HARDWARE_V3)
 213              		.loc 1 107 10 view .LVU51
 214 0118 E3FFFF1A 		bne	.L12
 215              	.L11:
 216              		.loc 1 115 9 view .LVU52
 217 011c FEFFFFEA 		b	set_rgb
 218              	.LVL13:
 219              	.L14:
 220              		.loc 1 115 9 view .LVU53
 221              		.align	2
 222              	.L13:
 223 0120 00000000 		.word	reg32_table
 224 0124 00000000 		.word	.LANCHOR0
 225              		.cfi_endproc
 226              	.LFE9:
 228              		.align	2
 229              		.global	set_color
 230              		.syntax unified
 231              		.arm
 233              	set_color:
 234              	.LVL14:
 235              	.LFB2:
  35:../firmware/hardware.c ****   reg32_table[REG32_LED] = LED_MANUAL;
 236              		.loc 1 35 1 is_stmt 1 view -0
 237              		.cfi_startproc
 238              		@ Function supports interworking.
 239              		@ args = 0, pretend = 0, frame = 0
 240              		@ frame_needed = 0, uses_anonymous_args = 0
 241              		@ link register save eliminated.
  36:../firmware/hardware.c ****   set_rgb(colors_r[c] << led_int, colors_g[c] << led_int, colors_b[c] << led_int);
 242              		.loc 1 36 3 view .LVU55
  36:../firmware/hardware.c ****   set_rgb(colors_r[c] << led_int, colors_g[c] << led_int, colors_b[c] << led_int);
 243              		.loc 1 36 26 is_stmt 0 view .LVU56
 244 0128 FF24A0E3 		mov	r2, #-16777216
 245 012c 34309FE5 		ldr	r3, .L16
 246 0130 002083E5 		str	r2, [r3]
  37:../firmware/hardware.c **** }
 247              		.loc 1 37 3 is_stmt 1 view .LVU57
  37:../firmware/hardware.c **** }
 248              		.loc 1 37 23 is_stmt 0 view .LVU58
 249 0134 30309FE5 		ldr	r3, .L16+4
 250 0138 02C0D3E5 		ldrb	ip, [r3, #2]	@ zero_extendqisi2
  37:../firmware/hardware.c **** }
 251              		.loc 1 37 67 view .LVU59
 252 013c 2C309FE5 		ldr	r3, .L16+8
 253 0140 0020F3E7 		ldrb	r2, [r3, r0]!	@ zero_extendqisi2
  37:../firmware/hardware.c **** }
 254              		.loc 1 37 43 view .LVU60
 255 0144 0E10D3E5 		ldrb	r1, [r3, #14]	@ zero_extendqisi2
  37:../firmware/hardware.c **** }
 256              		.loc 1 37 19 view .LVU61
 257 0148 1C00D3E5 		ldrb	r0, [r3, #28]	@ zero_extendqisi2
 258              	.LVL15:
  37:../firmware/hardware.c **** }
 259              		.loc 1 37 71 view .LVU62
 260 014c 122CA0E1 		lsl	r2, r2, ip
  37:../firmware/hardware.c **** }
 261              		.loc 1 37 47 view .LVU63
 262 0150 111CA0E1 		lsl	r1, r1, ip
  37:../firmware/hardware.c **** }
 263              		.loc 1 37 23 view .LVU64
 264 0154 100CA0E1 		lsl	r0, r0, ip
  37:../firmware/hardware.c **** }
 265              		.loc 1 37 3 view .LVU65
 266 0158 FF2002E2 		and	r2, r2, #255
 267 015c FF1001E2 		and	r1, r1, #255
 268 0160 FF0000E2 		and	r0, r0, #255
 269 0164 FEFFFFEA 		b	set_rgb
 270              	.LVL16:
 271              	.L17:
 272              		.align	2
 273              	.L16:
 274 0168 00000000 		.word	reg32_table
 275 016c 00000000 		.word	.LANCHOR0
 276 0170 00000000 		.word	.LANCHOR1
 277              		.cfi_endproc
 278              	.LFE2:
 280              		.align	2
 281              		.global	set_color_i
 282              		.syntax unified
 283              		.arm
 285              	set_color_i:
 286              	.LVL17:
 287              	.LFB3:
  41:../firmware/hardware.c ****   led_int = i;
 288              		.loc 1 41 1 is_stmt 1 view -0
 289              		.cfi_startproc
 290              		@ Function supports interworking.
 291              		@ args = 0, pretend = 0, frame = 0
 292              		@ frame_needed = 0, uses_anonymous_args = 0
 293              		@ link register save eliminated.
  42:../firmware/hardware.c ****   set_color(c);
 294              		.loc 1 42 3 view .LVU67
  42:../firmware/hardware.c ****   set_color(c);
 295              		.loc 1 42 11 is_stmt 0 view .LVU68
 296 0174 04309FE5 		ldr	r3, .L19
 297 0178 0210C3E5 		strb	r1, [r3, #2]
  43:../firmware/hardware.c **** }
 298              		.loc 1 43 3 is_stmt 1 view .LVU69
 299 017c FEFFFFEA 		b	set_color
 300              	.LVL18:
 301              	.L20:
  43:../firmware/hardware.c **** }
 302              		.loc 1 43 3 is_stmt 0 view .LVU70
 303              		.align	2
 304              	.L19:
 305 0180 00000000 		.word	.LANCHOR0
 306              		.cfi_endproc
 307              	.LFE3:
 309              		.align	2
 310              		.global	get_batt_voltage
 311              		.syntax unified
 312              		.arm
 314              	get_batt_voltage:
 315              	.LFB4:
  47:../firmware/hardware.c ****   return (((uint16_t) i2c_get(BATT_ADDR, 0x0c) << 8) | i2c_get(BATT_ADDR, 0x0d)) >> 5;
 316              		.loc 1 47 1 is_stmt 1 view -0
 317              		.cfi_startproc
 318              		@ Function supports interworking.
 319              		@ args = 0, pretend = 0, frame = 0
 320              		@ frame_needed = 0, uses_anonymous_args = 0
  48:../firmware/hardware.c **** }
 321              		.loc 1 48 3 view .LVU72
  47:../firmware/hardware.c ****   return (((uint16_t) i2c_get(BATT_ADDR, 0x0c) << 8) | i2c_get(BATT_ADDR, 0x0d)) >> 5;
 322              		.loc 1 47 1 is_stmt 0 view .LVU73
 323 0184 10402DE9 		push	{r4, lr}
 324              	.LCFI4:
 325              		.cfi_def_cfa_offset 8
 326              		.cfi_offset 4, -8
 327              		.cfi_offset 14, -4
  48:../firmware/hardware.c **** }
 328              		.loc 1 48 23 view .LVU74
 329 0188 0C10A0E3 		mov	r1, #12
 330 018c 3400A0E3 		mov	r0, #52
 331 0190 FEFFFFEB 		bl	i2c_get
 332              	.LVL19:
  48:../firmware/hardware.c **** }
 333              		.loc 1 48 56 view .LVU75
 334 0194 0D10A0E3 		mov	r1, #13
  48:../firmware/hardware.c **** }
 335              		.loc 1 48 23 view .LVU76
 336 0198 0040A0E1 		mov	r4, r0
  48:../firmware/hardware.c **** }
 337              		.loc 1 48 56 view .LVU77
 338 019c 3400A0E3 		mov	r0, #52
 339 01a0 FEFFFFEB 		bl	i2c_get
 340              	.LVL20:
  48:../firmware/hardware.c **** }
 341              		.loc 1 48 54 view .LVU78
 342 01a4 040480E1 		orr	r0, r0, r4, lsl #8
  48:../firmware/hardware.c **** }
 343              		.loc 1 48 82 view .LVU79
 344 01a8 C002A0E1 		asr	r0, r0, #5
  49:../firmware/hardware.c **** 
 345              		.loc 1 49 1 view .LVU80
 346 01ac 0008A0E1 		lsl	r0, r0, #16
 347 01b0 2008A0E1 		lsr	r0, r0, #16
 348 01b4 1040BDE8 		pop	{r4, lr}
 349              	.LCFI5:
 350              		.cfi_restore 14
 351              		.cfi_restore 4
 352              		.cfi_def_cfa_offset 0
 353 01b8 1EFF2FE1 		bx	lr
 354              		.cfi_endproc
 355              	.LFE4:
 357              		.align	2
 358              		.global	get_batt_current
 359              		.syntax unified
 360              		.arm
 362              	get_batt_current:
 363              	.LFB5:
  52:../firmware/hardware.c ****   int16_t tmp;
 364              		.loc 1 52 1 is_stmt 1 view -0
 365              		.cfi_startproc
 366              		@ Function supports interworking.
 367              		@ args = 0, pretend = 0, frame = 0
 368              		@ frame_needed = 0, uses_anonymous_args = 0
  53:../firmware/hardware.c **** 
 369              		.loc 1 53 3 view .LVU82
  55:../firmware/hardware.c ****   tmp = tmp >> 3;
 370              		.loc 1 55 3 view .LVU83
  52:../firmware/hardware.c ****   int16_t tmp;
 371              		.loc 1 52 1 is_stmt 0 view .LVU84
 372 01bc 10402DE9 		push	{r4, lr}
 373              	.LCFI6:
 374              		.cfi_def_cfa_offset 8
 375              		.cfi_offset 4, -8
 376              		.cfi_offset 14, -4
  55:../firmware/hardware.c ****   tmp = tmp >> 3;
 377              		.loc 1 55 20 view .LVU85
 378 01c0 0E10A0E3 		mov	r1, #14
 379 01c4 3400A0E3 		mov	r0, #52
 380 01c8 FEFFFFEB 		bl	i2c_get
 381              	.LVL21:
  55:../firmware/hardware.c ****   tmp = tmp >> 3;
 382              		.loc 1 55 53 view .LVU86
 383 01cc 0F10A0E3 		mov	r1, #15
  55:../firmware/hardware.c ****   tmp = tmp >> 3;
 384              		.loc 1 55 20 view .LVU87
 385 01d0 0040A0E1 		mov	r4, r0
  55:../firmware/hardware.c ****   tmp = tmp >> 3;
 386              		.loc 1 55 53 view .LVU88
 387 01d4 3400A0E3 		mov	r0, #52
 388 01d8 FEFFFFEB 		bl	i2c_get
 389              	.LVL22:
  55:../firmware/hardware.c ****   tmp = tmp >> 3;
 390              		.loc 1 55 7 view .LVU89
 391 01dc 040480E1 		orr	r0, r0, r4, lsl #8
 392 01e0 0008A0E1 		lsl	r0, r0, #16
 393              	.LVL23:
  56:../firmware/hardware.c ****   return tmp;
 394              		.loc 1 56 3 is_stmt 1 view .LVU90
  57:../firmware/hardware.c **** }
 395              		.loc 1 57 3 view .LVU91
  58:../firmware/hardware.c **** 
 396              		.loc 1 58 1 is_stmt 0 view .LVU92
 397 01e4 C009A0E1 		asr	r0, r0, #19
 398              	.LVL24:
  58:../firmware/hardware.c **** 
 399              		.loc 1 58 1 view .LVU93
 400 01e8 1040BDE8 		pop	{r4, lr}
 401              	.LCFI7:
 402              		.cfi_restore 14
 403              		.cfi_restore 4
 404              		.cfi_def_cfa_offset 0
  58:../firmware/hardware.c **** 
 405              		.loc 1 58 1 view .LVU94
 406 01ec 1EFF2FE1 		bx	lr
 407              		.cfi_endproc
 408              	.LFE5:
 410              		.align	2
 411              		.global	get_ext_voltage
 412              		.syntax unified
 413              		.arm
 415              	get_ext_voltage:
 416              	.LFB6:
  61:../firmware/hardware.c ****   return adc_read_ch(0);
 417              		.loc 1 61 1 is_stmt 1 view -0
 418              		.cfi_startproc
 419              		@ Function supports interworking.
 420              		@ args = 0, pretend = 0, frame = 0
 421              		@ frame_needed = 0, uses_anonymous_args = 0
  62:../firmware/hardware.c **** }
 422              		.loc 1 62 3 view .LVU96
  61:../firmware/hardware.c ****   return adc_read_ch(0);
 423              		.loc 1 61 1 is_stmt 0 view .LVU97
 424 01f0 10402DE9 		push	{r4, lr}
 425              	.LCFI8:
 426              		.cfi_def_cfa_offset 8
 427              		.cfi_offset 4, -8
 428              		.cfi_offset 14, -4
  62:../firmware/hardware.c **** }
 429              		.loc 1 62 10 view .LVU98
 430 01f4 0000A0E3 		mov	r0, #0
 431 01f8 FEFFFFEB 		bl	adc_read_ch
 432              	.LVL25:
  63:../firmware/hardware.c **** 
 433              		.loc 1 63 1 view .LVU99
 434 01fc 1040BDE8 		pop	{r4, lr}
 435              	.LCFI9:
 436              		.cfi_restore 14
 437              		.cfi_restore 4
 438              		.cfi_def_cfa_offset 0
 439 0200 1EFF2FE1 		bx	lr
 440              		.cfi_endproc
 441              	.LFE6:
 443              		.align	2
 444              		.global	get_batt_current_acc
 445              		.syntax unified
 446              		.arm
 448              	get_batt_current_acc:
 449              	.LFB7:
  66:../firmware/hardware.c ****   return ((int16_t) i2c_get(BATT_ADDR, 0x10) << 8) | i2c_get(BATT_ADDR, 0x11);
 450              		.loc 1 66 1 is_stmt 1 view -0
 451              		.cfi_startproc
 452              		@ Function supports interworking.
 453              		@ args = 0, pretend = 0, frame = 0
 454              		@ frame_needed = 0, uses_anonymous_args = 0
  67:../firmware/hardware.c **** }
 455              		.loc 1 67 3 view .LVU101
  66:../firmware/hardware.c ****   return ((int16_t) i2c_get(BATT_ADDR, 0x10) << 8) | i2c_get(BATT_ADDR, 0x11);
 456              		.loc 1 66 1 is_stmt 0 view .LVU102
 457 0204 10402DE9 		push	{r4, lr}
 458              	.LCFI10:
 459              		.cfi_def_cfa_offset 8
 460              		.cfi_offset 4, -8
 461              		.cfi_offset 14, -4
  67:../firmware/hardware.c **** }
 462              		.loc 1 67 21 view .LVU103
 463 0208 1010A0E3 		mov	r1, #16
 464 020c 3400A0E3 		mov	r0, #52
 465 0210 FEFFFFEB 		bl	i2c_get
 466              	.LVL26:
  67:../firmware/hardware.c **** }
 467              		.loc 1 67 54 view .LVU104
 468 0214 1110A0E3 		mov	r1, #17
  67:../firmware/hardware.c **** }
 469              		.loc 1 67 21 view .LVU105
 470 0218 0040A0E1 		mov	r4, r0
  67:../firmware/hardware.c **** }
 471              		.loc 1 67 54 view .LVU106
 472 021c 3400A0E3 		mov	r0, #52
 473 0220 FEFFFFEB 		bl	i2c_get
 474              	.LVL27:
  67:../firmware/hardware.c **** }
 475              		.loc 1 67 52 view .LVU107
 476 0224 040480E1 		orr	r0, r0, r4, lsl #8
  68:../firmware/hardware.c **** 
 477              		.loc 1 68 1 view .LVU108
 478 0228 0008A0E1 		lsl	r0, r0, #16
 479 022c 4008A0E1 		asr	r0, r0, #16
 480 0230 1040BDE8 		pop	{r4, lr}
 481              	.LCFI11:
 482              		.cfi_restore 14
 483              		.cfi_restore 4
 484              		.cfi_def_cfa_offset 0
 485 0234 1EFF2FE1 		bx	lr
 486              		.cfi_endproc
 487              	.LFE7:
 489              		.align	2
 490              		.global	get_temperature
 491              		.syntax unified
 492              		.arm
 494              	get_temperature:
 495              	.LFB8:
  71:../firmware/hardware.c ****   return (((int16_t) i2c_get(BATT_ADDR, 0x18) << 8) | i2c_get(BATT_ADDR, 0x19)) >> 5;
 496              		.loc 1 71 1 is_stmt 1 view -0
 497              		.cfi_startproc
 498              		@ Function supports interworking.
 499              		@ args = 0, pretend = 0, frame = 0
 500              		@ frame_needed = 0, uses_anonymous_args = 0
  72:../firmware/hardware.c **** }
 501              		.loc 1 72 3 view .LVU110
  71:../firmware/hardware.c ****   return (((int16_t) i2c_get(BATT_ADDR, 0x18) << 8) | i2c_get(BATT_ADDR, 0x19)) >> 5;
 502              		.loc 1 71 1 is_stmt 0 view .LVU111
 503 0238 10402DE9 		push	{r4, lr}
 504              	.LCFI12:
 505              		.cfi_def_cfa_offset 8
 506              		.cfi_offset 4, -8
 507              		.cfi_offset 14, -4
  72:../firmware/hardware.c **** }
 508              		.loc 1 72 22 view .LVU112
 509 023c 1810A0E3 		mov	r1, #24
 510 0240 3400A0E3 		mov	r0, #52
 511 0244 FEFFFFEB 		bl	i2c_get
 512              	.LVL28:
  72:../firmware/hardware.c **** }
 513              		.loc 1 72 55 view .LVU113
 514 0248 1910A0E3 		mov	r1, #25
  72:../firmware/hardware.c **** }
 515              		.loc 1 72 22 view .LVU114
 516 024c 0040A0E1 		mov	r4, r0
  72:../firmware/hardware.c **** }
 517              		.loc 1 72 55 view .LVU115
 518 0250 3400A0E3 		mov	r0, #52
 519 0254 FEFFFFEB 		bl	i2c_get
 520              	.LVL29:
  72:../firmware/hardware.c **** }
 521              		.loc 1 72 53 view .LVU116
 522 0258 040480E1 		orr	r0, r0, r4, lsl #8
  72:../firmware/hardware.c **** }
 523              		.loc 1 72 81 view .LVU117
 524 025c C002A0E1 		asr	r0, r0, #5
  73:../firmware/hardware.c **** 
 525              		.loc 1 73 1 view .LVU118
 526 0260 0008A0E1 		lsl	r0, r0, #16
 527 0264 4008A0E1 		asr	r0, r0, #16
 528 0268 1040BDE8 		pop	{r4, lr}
 529              	.LCFI13:
 530              		.cfi_restore 14
 531              		.cfi_restore 4
 532              		.cfi_def_cfa_offset 0
 533 026c 1EFF2FE1 		bx	lr
 534              		.cfi_endproc
 535              	.LFE8:
 537              		.align	2
 538              		.global	uc_init
 539              		.syntax unified
 540              		.arm
 542              	uc_init:
 543              	.LFB10:
 116:../firmware/hardware.c **** #elif defined(HARDWARE_V2)
 117:../firmware/hardware.c ****         set_led(0);
 118:../firmware/hardware.c **** #endif
 119:../firmware/hardware.c ****       }
 120:../firmware/hardware.c ****     }
 121:../firmware/hardware.c ****   }
 122:../firmware/hardware.c **** }
 123:../firmware/hardware.c **** 
 124:../firmware/hardware.c **** void uc_init()
 125:../firmware/hardware.c **** {
 544              		.loc 1 125 1 is_stmt 1 view -0
 545              		.cfi_startproc
 546              		@ Function supports interworking.
 547              		@ args = 0, pretend = 0, frame = 0
 548              		@ frame_needed = 0, uses_anonymous_args = 0
 549              		@ link register save eliminated.
 126:../firmware/hardware.c ****   PLLCFG = PLLCFG_MSEL | PLLCFG_PSEL;    // configure the PLL
 550              		.loc 1 126 3 view .LVU120
 551              		.loc 1 126 10 is_stmt 0 view .LVU121
 552 0270 2220A0E3 		mov	r2, #34
 553 0274 94309FE5 		ldr	r3, .L35
 554 0278 8420C3E5 		strb	r2, [r3, #132]
 127:../firmware/hardware.c ****   PLLCON = PLLCON_PLLE;                  // enable the PLL
 555              		.loc 1 127 3 is_stmt 1 view .LVU122
 556              		.loc 1 127 10 is_stmt 0 view .LVU123
 557 027c 0120A0E3 		mov	r2, #1
 558 0280 8020C3E5 		strb	r2, [r3, #128]
 128:../firmware/hardware.c ****   PLLFEED = 0xAA;
 559              		.loc 1 128 3 is_stmt 1 view .LVU124
 560              		.loc 1 128 11 is_stmt 0 view .LVU125
 561 0284 5520E0E3 		mvn	r2, #85
 562 0288 8C20C3E5 		strb	r2, [r3, #140]
 129:../firmware/hardware.c ****   PLLFEED = 0x55;
 563              		.loc 1 129 3 is_stmt 1 view .LVU126
 564              		.loc 1 129 11 is_stmt 0 view .LVU127
 565 028c 5520A0E3 		mov	r2, #85
 130:../firmware/hardware.c ****   IO0CLR = 0xFFFFFFFF;                   // clear all outputs
 566              		.loc 1 130 10 view .LVU128
 567 0290 0010E0E3 		mvn	r1, #0
 129:../firmware/hardware.c ****   PLLFEED = 0x55;
 568              		.loc 1 129 11 view .LVU129
 569 0294 8C20C3E5 		strb	r2, [r3, #140]
 570              		.loc 1 130 3 is_stmt 1 view .LVU130
 571              		.loc 1 130 10 is_stmt 0 view .LVU131
 572 0298 74209FE5 		ldr	r2, .L35+4
 573 029c 0C1082E5 		str	r1, [r2, #12]
 131:../firmware/hardware.c ****   IO0DIR = BIT(12);                      // setup I/O pin directions
 574              		.loc 1 131 3 is_stmt 1 view .LVU132
 575              		.loc 1 131 10 is_stmt 0 view .LVU133
 576 02a0 011AA0E3 		mov	r1, #4096
 577 02a4 081082E5 		str	r1, [r2, #8]
 132:../firmware/hardware.c ****   while (!(PLLSTAT & PLLSTAT_LOCK));     // wait for PLL locking
 578              		.loc 1 132 3 is_stmt 1 view .LVU134
 579              	.L32:
 580              		.loc 1 132 36 discriminator 1 view .LVU135
 581              		.loc 1 132 9 discriminator 1 view .LVU136
 582              		.loc 1 132 12 is_stmt 0 discriminator 1 view .LVU137
 583 02a8 B828D3E1 		ldrh	r2, [r3, #136]
 584              		.loc 1 132 9 discriminator 1 view .LVU138
 585 02ac 010B12E3 		tst	r2, #1024
 586 02b0 FCFFFF0A 		beq	.L32
 133:../firmware/hardware.c ****   PLLCON = PLLCON_PLLE | PLLCON_PLLC;    // connect the now enabled & locked PLL
 587              		.loc 1 133 3 is_stmt 1 view .LVU139
 588              		.loc 1 133 10 is_stmt 0 view .LVU140
 589 02b4 0320A0E3 		mov	r2, #3
 134:../firmware/hardware.c ****   PLLFEED = 0xAA;
 590              		.loc 1 134 11 view .LVU141
 591 02b8 5510E0E3 		mvn	r1, #85
 133:../firmware/hardware.c ****   PLLCON = PLLCON_PLLE | PLLCON_PLLC;    // connect the now enabled & locked PLL
 592              		.loc 1 133 10 view .LVU142
 593 02bc 8020C3E5 		strb	r2, [r3, #128]
 594              		.loc 1 134 3 is_stmt 1 view .LVU143
 595              		.loc 1 134 11 is_stmt 0 view .LVU144
 596 02c0 8C10C3E5 		strb	r1, [r3, #140]
 135:../firmware/hardware.c ****   PLLFEED = 0x55;
 597              		.loc 1 135 3 is_stmt 1 view .LVU145
 598              		.loc 1 135 11 is_stmt 0 view .LVU146
 599 02c4 5510A0E3 		mov	r1, #85
 136:../firmware/hardware.c ****   PINSEL2 = 0x30;                        // GPIO on TRACEPKT / JTAG
 600              		.loc 1 136 11 view .LVU147
 601 02c8 3000A0E3 		mov	r0, #48
 135:../firmware/hardware.c ****   PLLFEED = 0x55;
 602              		.loc 1 135 11 view .LVU148
 603 02cc 8C10C3E5 		strb	r1, [r3, #140]
 604              		.loc 1 136 3 is_stmt 1 view .LVU149
 605              		.loc 1 136 11 is_stmt 0 view .LVU150
 606 02d0 40109FE5 		ldr	r1, .L35+8
 607 02d4 140081E5 		str	r0, [r1, #20]
 137:../firmware/hardware.c ****   MAMTIM = MAMTIM_CYCLES;                // configure and enable the MAM
 608              		.loc 1 137 3 is_stmt 1 view .LVU151
 609              		.loc 1 137 10 is_stmt 0 view .LVU152
 610 02d8 0420C3E5 		strb	r2, [r3, #4]
 138:../firmware/hardware.c ****   MAMCR = MAMCR_FULL;
 611              		.loc 1 138 3 is_stmt 1 view .LVU153
 612              		.loc 1 138 9 is_stmt 0 view .LVU154
 613 02dc 0220A0E3 		mov	r2, #2
 614 02e0 0020C3E5 		strb	r2, [r3]
 139:../firmware/hardware.c ****   VPBDIV = VPBDIV_VALUE;                 // set the peripheral bus clock speed
 615              		.loc 1 139 3 is_stmt 1 view .LVU155
 616              		.loc 1 139 10 is_stmt 0 view .LVU156
 617 02e4 0021C3E5 		strb	r2, [r3, #256]
 140:../firmware/hardware.c ****   MEMMAP = MEMMAP_FLASH;                 // map interrupt vectors space in flash
 618              		.loc 1 140 3 is_stmt 1 view .LVU157
 619              		.loc 1 140 10 is_stmt 0 view .LVU158
 620 02e8 0120A0E3 		mov	r2, #1
 621 02ec 4020C3E5 		strb	r2, [r3, #64]
 141:../firmware/hardware.c ****   VICIntEnClear = 0xFFFFFFFF;            // clear all interrupts
 622              		.loc 1 141 3 is_stmt 1 view .LVU159
 623              		.loc 1 141 17 is_stmt 0 view .LVU160
 624 02f0 0F3CE0E3 		mvn	r3, #3840
 625 02f4 0020E0E3 		mvn	r2, #0
 626 02f8 EB2003E5 		str	r2, [r3, #-235]
 142:../firmware/hardware.c ****   VICIntSelect = 0x00000000;             // clear all FIQ selections
 627              		.loc 1 142 3 is_stmt 1 view .LVU161
 628              		.loc 1 142 16 is_stmt 0 view .LVU162
 629 02fc 0020A0E3 		mov	r2, #0
 630 0300 F32003E5 		str	r2, [r3, #-243]
 143:../firmware/hardware.c ****   VICDefVectAddr = (uint32_t) reset;     // point unvectored IRQs to reset()
 631              		.loc 1 143 3 is_stmt 1 view .LVU163
 632              		.loc 1 143 20 is_stmt 0 view .LVU164
 633 0304 10209FE5 		ldr	r2, .L35+12
 634              		.loc 1 143 18 view .LVU165
 635 0308 CB2003E5 		str	r2, [r3, #-203]
 144:../firmware/hardware.c **** }
 636              		.loc 1 144 1 view .LVU166
 637 030c 1EFF2FE1 		bx	lr
 638              	.L36:
 639              		.align	2
 640              	.L35:
 641 0310 00C01FE0 		.word	-534790144
 642 0314 008002E0 		.word	-536707072
 643 0318 00C002E0 		.word	-536690688
 644 031c 00000000 		.word	reset
 645              		.cfi_endproc
 646              	.LFE10:
 648              		.align	2
 649              		.global	hardware_init
 650              		.syntax unified
 651              		.arm
 653              	hardware_init:
 654              	.LFB11:
 145:../firmware/hardware.c **** 
 146:../firmware/hardware.c **** void hardware_init()
 147:../firmware/hardware.c **** {
 655              		.loc 1 147 1 is_stmt 1 view -0
 656              		.cfi_startproc
 657              		@ Function supports interworking.
 658              		@ args = 0, pretend = 0, frame = 0
 659              		@ frame_needed = 0, uses_anonymous_args = 0
 148:../firmware/hardware.c ****   uc_init();
 660              		.loc 1 148 3 view .LVU168
 147:../firmware/hardware.c ****   uc_init();
 661              		.loc 1 147 1 is_stmt 0 view .LVU169
 662 0320 10402DE9 		push	{r4, lr}
 663              	.LCFI14:
 664              		.cfi_def_cfa_offset 8
 665              		.cfi_offset 4, -8
 666              		.cfi_offset 14, -4
 667              		.loc 1 148 3 view .LVU170
 668 0324 FEFFFFEB 		bl	uc_init
 669              	.LVL30:
 149:../firmware/hardware.c ****   initSysTime();
 670              		.loc 1 149 3 is_stmt 1 view .LVU171
 671 0328 FEFFFFEB 		bl	initSysTime
 672              	.LVL31:
 150:../firmware/hardware.c ****   i2c_init();
 673              		.loc 1 150 3 view .LVU172
 674 032c FEFFFFEB 		bl	i2c_init
 675              	.LVL32:
 151:../firmware/hardware.c **** 
 152:../firmware/hardware.c **** #if defined(HARDWARE_V3)
 153:../firmware/hardware.c ****   init_rgb_led();
 676              		.loc 1 153 3 view .LVU173
 677 0330 FEFFFFEB 		bl	init_rgb_led
 678              	.LVL33:
 154:../firmware/hardware.c **** #elif defined(HARDWARE_V2)
 155:../firmware/hardware.c ****   IO0DIR = IO0DIR | BIT_EXTLED;   // external LED output
 156:../firmware/hardware.c ****   IO1DIR = IO1DIR | BIT_CHG_EN;   // battery charger enable
 157:../firmware/hardware.c ****   IO0CLR = BIT_EXTLED;
 158:../firmware/hardware.c ****   IO1CLR = BIT_CHG_EN;
 159:../firmware/hardware.c **** #endif
 160:../firmware/hardware.c **** 
 161:../firmware/hardware.c ****   registers_init();
 679              		.loc 1 161 3 view .LVU174
 680 0334 FEFFFFEB 		bl	registers_init
 681              	.LVL34:
 162:../firmware/hardware.c ****   radio_init();
 682              		.loc 1 162 3 view .LVU175
 683 0338 FEFFFFEB 		bl	radio_init
 684              	.LVL35:
 163:../firmware/hardware.c ****   adc_init();
 685              		.loc 1 163 3 view .LVU176
 686 033c FEFFFFEB 		bl	adc_init
 687              	.LVL36:
 164:../firmware/hardware.c **** 
 165:../firmware/hardware.c ****   timer1_init(TIMER1_PERIOD);
 688              		.loc 1 165 3 view .LVU177
 689 0340 20009FE5 		ldr	r0, .L39
 690 0344 FEFFFFEB 		bl	timer1_init
 691              	.LVL37:
 166:../firmware/hardware.c ****   timer1_init_isr();
 692              		.loc 1 166 3 view .LVU178
 693 0348 FEFFFFEB 		bl	timer1_init_isr
 694              	.LVL38:
 167:../firmware/hardware.c ****   timer1_add_user_function(led_timer_isr, 1);
 695              		.loc 1 167 3 view .LVU179
 696 034c 0110A0E3 		mov	r1, #1
 697 0350 14009FE5 		ldr	r0, .L39+4
 698 0354 FEFFFFEB 		bl	timer1_add_user_function
 699              	.LVL39:
 168:../firmware/hardware.c **** 
 169:../firmware/hardware.c **** #ifdef HARDWARE_V3
 170:../firmware/hardware.c ****   can_head_init();
 700              		.loc 1 170 3 view .LVU180
 701 0358 FEFFFFEB 		bl	can_head_init
 702              	.LVL40:
 171:../firmware/hardware.c **** #endif
 172:../firmware/hardware.c **** 
 173:../firmware/hardware.c ****   enableIRQ();
 703              		.loc 1 173 3 view .LVU181
 704 035c FEFFFFEB 		bl	enableIRQ
 705              	.LVL41:
 174:../firmware/hardware.c **** 
 175:../firmware/hardware.c **** }
 706              		.loc 1 175 1 is_stmt 0 view .LVU182
 707 0360 1040BDE8 		pop	{r4, lr}
 708              	.LCFI15:
 709              		.cfi_restore 14
 710              		.cfi_restore 4
 711              		.cfi_def_cfa_offset 0
 712 0364 1EFF2FE1 		bx	lr
 713              	.L40:
 714              		.align	2
 715              	.L39:
 716 0368 50C30000 		.word	50000
 717 036c 00000000 		.word	led_timer_isr
 718              		.cfi_endproc
 719              	.LFE11:
 721              		.section	.rodata
 722              		.set	.LANCHOR1,. + 0
 725              	colors_b:
 726 0000 00020002 		.ascii	"\000\002\000\002\000\002\000\002\000\000\002\001\001"
 726      00020002 
 726      00000201 
 726      01
 727 000d 02       		.ascii	"\002"
 730              	colors_g:
 731 000e 00000202 		.ascii	"\000\000\002\002\000\000\002\002\001\002\001\002\000"
 731      00000202 
 731      01020102 
 731      00
 732 001b 00       		.ascii	"\000"
 735              	colors_r:
 736 001c 00000000 		.ascii	"\000\000\000\000\002\002\002\002\002\001\000\000\002"
 736      02020202 
 736      02010000 
 736      02
 737 0029 01       		.ascii	"\001"
 738              		.bss
 739              		.set	.LANCHOR0,. + 0
 742              	ctr.1:
 743 0000 00       		.space	1
 746              	st.0:
 747 0001 00       		.space	1
 750              	led_int:
 751 0002 00       		.space	1
 752              		.text
 753              	.Letext0:
 754              		.file 2 "../firmware/lpcGPIO.h"
 755              		.file 3 "../firmware/lpcPIN.h"
 756              		.file 4 "../firmware/lpcSCB.h"
 757              		.file 5 "../firmware/lpcVIC.h"
 758              		.file 6 "c:\\arm-gcc\\arm-none-eabi\\include\\machine\\_default_types.h"
 759              		.file 7 "c:\\arm-gcc\\arm-none-eabi\\include\\sys\\_stdint.h"
 760              		.file 8 "../firmware/registers.h"
 761              		.file 9 "../firmware/sysTime.h"
 762              		.file 10 "../firmware/i2c.h"
 763              		.file 11 "../firmware/radio.h"
 764              		.file 12 "../firmware/adc.h"
 765              		.file 13 "../firmware/timerISR.h"
 766              		.file 14 "../firmware/can.h"
 767              		.file 15 "../firmware/armVIC.h"
 768              		.file 16 "../../common/regdefs.h"
DEFINED SYMBOLS
                            *ABS*:00000000 hardware.c
C:\Users\agrillo\AppData\Local\Temp\ccmEk50H.s:17     .text:00000000 $a
C:\Users\agrillo\AppData\Local\Temp\ccmEk50H.s:22     .text:00000000 set_rgb
C:\Users\agrillo\AppData\Local\Temp\ccmEk50H.s:84     .text:00000044 init_rgb_led
C:\Users\agrillo\AppData\Local\Temp\ccmEk50H.s:142    .text:0000009c led_timer_isr
C:\Users\agrillo\AppData\Local\Temp\ccmEk50H.s:223    .text:00000120 $d
C:\Users\agrillo\AppData\Local\Temp\ccmEk50H.s:228    .text:00000128 $a
C:\Users\agrillo\AppData\Local\Temp\ccmEk50H.s:233    .text:00000128 set_color
C:\Users\agrillo\AppData\Local\Temp\ccmEk50H.s:274    .text:00000168 $d
C:\Users\agrillo\AppData\Local\Temp\ccmEk50H.s:280    .text:00000174 $a
C:\Users\agrillo\AppData\Local\Temp\ccmEk50H.s:285    .text:00000174 set_color_i
C:\Users\agrillo\AppData\Local\Temp\ccmEk50H.s:305    .text:00000180 $d
C:\Users\agrillo\AppData\Local\Temp\ccmEk50H.s:309    .text:00000184 $a
C:\Users\agrillo\AppData\Local\Temp\ccmEk50H.s:314    .text:00000184 get_batt_voltage
C:\Users\agrillo\AppData\Local\Temp\ccmEk50H.s:362    .text:000001bc get_batt_current
C:\Users\agrillo\AppData\Local\Temp\ccmEk50H.s:415    .text:000001f0 get_ext_voltage
C:\Users\agrillo\AppData\Local\Temp\ccmEk50H.s:448    .text:00000204 get_batt_current_acc
C:\Users\agrillo\AppData\Local\Temp\ccmEk50H.s:494    .text:00000238 get_temperature
C:\Users\agrillo\AppData\Local\Temp\ccmEk50H.s:542    .text:00000270 uc_init
C:\Users\agrillo\AppData\Local\Temp\ccmEk50H.s:641    .text:00000310 $d
C:\Users\agrillo\AppData\Local\Temp\ccmEk50H.s:648    .text:00000320 $a
C:\Users\agrillo\AppData\Local\Temp\ccmEk50H.s:653    .text:00000320 hardware_init
C:\Users\agrillo\AppData\Local\Temp\ccmEk50H.s:716    .text:00000368 $d
C:\Users\agrillo\AppData\Local\Temp\ccmEk50H.s:725    .rodata:00000000 colors_b
C:\Users\agrillo\AppData\Local\Temp\ccmEk50H.s:730    .rodata:0000000e colors_g
C:\Users\agrillo\AppData\Local\Temp\ccmEk50H.s:735    .rodata:0000001c colors_r
C:\Users\agrillo\AppData\Local\Temp\ccmEk50H.s:742    .bss:00000000 ctr.1
C:\Users\agrillo\AppData\Local\Temp\ccmEk50H.s:743    .bss:00000000 $d
C:\Users\agrillo\AppData\Local\Temp\ccmEk50H.s:746    .bss:00000001 st.0
C:\Users\agrillo\AppData\Local\Temp\ccmEk50H.s:750    .bss:00000002 led_int

UNDEFINED SYMBOLS
i2c_set
reg32_table
i2c_get
adc_read_ch
reset
initSysTime
i2c_init
registers_init
radio_init
adc_init
timer1_init
timer1_init_isr
timer1_add_user_function
can_head_init
enableIRQ
